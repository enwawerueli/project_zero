{"version":3,"sources":["store.js","components/navigation.js","components/footer.js","components/timer.js","components/main.js","components/home.js","components/signup.js","components/login.js","components/appointment.js","components/http401.js","components/http403.js","components/http404.js","components/http500.js","serviceWorker.js","index.js","App.js"],"names":["StoreContext","createContext","Store","children","initialUserState","loggedIn","useReducer","state","action","newUserState","type","payload","sessionStorage","setItem","JSON","stringify","parse","getItem","currentUser","dispatchUserAction","Provider","value","Navigation","useContext","logout","evenyKey","event","preventDefault","axios","get","headers","accessToken","then","response","data","logged_in","NotificationManager","success","message","catch","error","console","log","Navbar","bg","expand","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Item","href","Divider","Link","Form","inline","InputGroup","Control","placeholder","Button","variant","username","onSelect","ButtonGroup","Footer","Container","fluid","Row","Col","lg","md","target","window","appName","Timer","label","useState","time","setTime","useEffect","timer","setInterval","clearInterval","Date","toISOString","substr","Main","style","marginBottom","Home","src","alt","validityProps","touched","isValid","isInvalid","Signup","setLoggedUser","initialValues","email","password","confirmPassword","validate","values","errors","Object","keys","map","key","length","test","onSubmit","post","result","formik","noValidate","handleSubmit","Group","controlId","Label","name","required","onChange","handleChange","onBlur","handleBlur","Feedback","Text","Login","userId","access_token","refreshToken","refresh_token","Appointment","firstName","setFirstName","middleName","setMiddleName","lastName","setLastName","phoneNo","setPhoneNo","age","setAge","gender","treatmentHistory","historyDetails","setHistoryDetails","scheduleDate","setScheduleDate","validated","setValidated","e","form","currentTarget","checkValidity","full_name","phone_no","treatment_history","history_details","schedule_date","trim","as","maxLength","Check","min","rows","Http401","Http403","Http404","Http500","Boolean","location","hostname","match","history","createBrowserHistory","interceptors","use","undefined","a","async","status","token_status","user","refresh_url","refreshResponse","config","url","method","retryResponse","Promise","resolve","push","reject","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c949b7a.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\nimport { createContext } from 'react';\n\nexport const StoreContext = createContext();\n\nexport default function Store({children}) {\n\n  let initialUserState =  {loggedIn: false};\n  const [currentUser, dispatchUserAction] = useReducer(\n    function (state, action) {\n      let newUserState = {};\n      if (action.type === 'login') newUserState = {...state, ...action.payload, loggedIn: true};\n      else if (action.type === 'logout') newUserState = initialUserState;\n      sessionStorage.setItem('user', JSON.stringify(newUserState));\n      return newUserState;\n    },\n    JSON.parse(sessionStorage.getItem('user')) || initialUserState\n  );\n\n  return (\n    <StoreContext.Provider value={{currentUser, dispatchUserAction}}>\n      {children}\n    </StoreContext.Provider>\n  );\n}\n","import React, {useContext} from 'react';\nimport { Navbar, Nav, NavDropdown, Form, Button, InputGroup, ButtonGroup } from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport axios from 'axios';\nimport {NotificationManager} from 'react-notifications';\n\nimport {StoreContext} from '../store';\n\nexport default function Navigation() {\n\n  const {currentUser, dispatchUserAction} = useContext(StoreContext);\n  \n  function logout(evenyKey, event) {\n\n    event.preventDefault();\n    axios\n      .get(`/api/logout`, {headers: {'Authorization': `Bearer ${currentUser.accessToken}`}})\n      .then(function (response) {\n        if(response.data.logged_in === false) {\n          dispatchUserAction({type: 'logout'});\n          NotificationManager.success(response.data.message);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <LinkContainer to=\"/\">\n        <Navbar.Brand>ProjectZero</Navbar.Brand>\n      </LinkContainer>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <NavDropdown title=\"Home\" id=\"basic-nav-dropdown\">\n            <LinkContainer to=\"/schedule-appointment\">\n              <NavDropdown.Item>Schedule Appointment</NavDropdown.Item>\n            </LinkContainer>\n            <NavDropdown.Item href=\"/action\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"/action\">Another action</NavDropdown.Item>\n            <NavDropdown.Item href=\"/action\">Something</NavDropdown.Item>\n            <NavDropdown.Divider/>\n            <NavDropdown.Item href=\"/action\">Something Else</NavDropdown.Item>\n          </NavDropdown>\n          <NavDropdown title=\"Causes\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"/action\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"/action\">Another action</NavDropdown.Item>\n            <NavDropdown.Item href=\"/action\">Something</NavDropdown.Item>\n            <NavDropdown.Divider/>\n            <NavDropdown.Item href=\"/action\">Separated link</NavDropdown.Item>\n          </NavDropdown>\n          <NavDropdown title=\"Preventive Measures\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"/action\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"/action\">Another action</NavDropdown.Item>\n            <NavDropdown.Item href=\"/action\">Something</NavDropdown.Item>\n            <NavDropdown.Divider/>\n            <NavDropdown.Item href=\"/action\">Separated link</NavDropdown.Item>\n          </NavDropdown>\n          <Nav.Link href=\"#aboutUs\">About Us</Nav.Link>\n          <Nav.Link href=\"#contactUs\">Contact Us</Nav.Link>\n        </Nav>\n        <Form inline>\n          <InputGroup>\n            <Form.Control type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"success\">Search</Button>\n          </InputGroup>\n        </Form>&nbsp;\n        {\n          (function () {\n            if (currentUser.loggedIn === true) {\n              return (\n                <NavDropdown title={currentUser.username} id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item onSelect={logout}>Logout</NavDropdown.Item>\n                </NavDropdown>\n              );\n            } else {\n              return (\n                <ButtonGroup>\n                  <LinkContainer to=\"/login\">\n                    <Button>Login</Button>\n                  </LinkContainer>\n                  <LinkContainer to=\"/signup\">\n                    <Button>Signup</Button>\n                  </LinkContainer>\n                </ButtonGroup>\n              );\n            }\n          })()\n        }\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nexport default function Footer() {\n  \n  return (\n    <Container fluid className=\"py-5 bg-light\">\n      <Row className=\"py-4\">\n        <Col lg={6} md={6} id=\"aboutUs\" className=\"mb-4 mb-lg-0\">\n          <h6 className=\"text-uppercase font-weight-bold mb-4\">About Us</h6>\n          <p className=\"font-italic text-muted\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n          eiusmod tempor incididunt.</p>\n        </Col>\n        <Col lg={2} md={2} id=\"contactUs\" className=\"mb-4 mb-lg-0\">\n          <h6 className=\"text-uppercase font-weight-bold mb-4\">Quick Links</h6>\n          <ul className=\"list-unstyled mb-0\">\n            <li className=\"mb-2\"><Link to=\"/login\" className=\"text-muted\">Login</Link></li>\n            <li className=\"mb-2\"><Link to=\"/signup\" className=\"text-muted\">Signup</Link></li>\n            <li className=\"mb-2\"><Link to=\"/products\" className=\"text-muted\">Our Products</Link></li>\n            <li className=\"mb-2\"><Link to=\"/faq\" className=\"text-muted\">FAQ</Link></li>\n          </ul>\n        </Col>\n        <Col lg={2} md={2} className=\"mb-4 mb-lg-0\">\n          <h6 className=\"text-uppercase font-weight-bold mb-4\">Contact Us</h6>\n          <ul className=\"list-unstyled mb-0\">\n            <li className=\"mb-2\">Address</li>\n            <li className=\"mb-2\">Phone</li>\n            <li className=\"mb-2\">Email</li>\n          </ul>\n        </Col>\n        <Col lg={2} md={2} className=\"mb-4 mb-lg-0\">\n          <h6 className=\"text-uppercase font-weight-bold mb-4\">Follow Us</h6>\n          <ul className=\"list-unstyled mb-0\">\n            <li className=\"list-item\">\n              <a href=\"https://twitter.com\" target=\"_blank\" title=\"twitter\"><span className=\"fa fa-twitter\"></span>&nbsp;Twitter</a>\n            </li>\n            <li className=\"list-item\">\n              <a href=\"https://facebook.com\" target=\"_blank\" title=\"facebook\"><span className=\"fa fa-facebook\"></span>&nbsp;Facebook</a>\n            </li>\n            <li className=\"list-item\">\n              <a href=\"https://instagram.com\" target=\"_blank\" title=\"instagram\"><span className=\"fa fa-instagram\"></span>&nbsp;Instagram</a>\n            </li>\n          </ul>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <p className=\"font-weight-bold\">&copy; 2019 - {window.appName} | All rights reserved.</p>\n      </Row>\n    </Container>\n  );\n}","import React, { useState, useEffect } from 'react';\n\nexport default function Timer({label}) {\n\n    const [time, setTime] = useState(0);\n    useEffect(() => {\n        const timer = setInterval(() => setTime(time + 1), 1000);\n        return () => clearInterval(timer);\n    });\n    return (<span>{`${label}: ${new Date(time * 1000).toISOString().substr(11, 8)}`}</span>);\n}\n","import React from 'react';\n\nimport Navigation from './navigation';\nimport Footer from './footer';\nimport Timer from './timer';\n\nexport default function Main({children}) {\n  return (\n    <>\n      <Navigation/>\n      <div className=\"container-fluid bg-light text-right pb-2\" style={{marginBottom: '40px'}}>\n        <Timer label=\"Active\"/>\n      </div>\n      {children}\n      <Footer/>\n    </>\n  );\n}\n","import React from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport Main from './main';\n\nexport default function Home({children}) {\n  return (\n    <Main>\n      <Container>\n        <Row>\n          <Col md={8}>\n            <div>\n              <figure className=\"figure\">\n                <img src=\"\" className=\"figure-img img-fluid rounded\" alt=\"...\" />\n                <figcaption className=\"figure-caption\">Image caption.</figcaption>\n              </figure>\n            </div>\n            <div>\n              <figure className=\"figure\">\n                <img src=\"\" className=\"figure-img img-fluid rounded\" alt=\"...\" />\n                <figcaption className=\"figure-caption\">Image caption.</figcaption>\n              </figure>\n            </div>\n          </Col>\n          {children}\n        </Row>\n      </Container>\n    </Main>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { NotificationManager } from 'react-notifications';\nimport { Formik } from \"formik\";\n\nimport Home from './home';\nimport { StoreContext } from '../store';\n\nexport function validityProps(error, touched) {\n  return {isValid: !error && touched, isInvalid: error && touched};\n}\n\nexport default function Signup() {\n  \n  const { setLoggedUser } = useContext(StoreContext)\n\n  function validate(values) {\n    const errors = {}\n    Object.keys(values).map(key => {\n      if (!values[key]) errors[key] = 'Required';\n    });\n    if (!errors.username && values.username.length < 3) {\n      errors.username = 'Too short. Must be atleast 3 characters'\n    }\n    if (!errors.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Enter a valid email.';\n    }\n    if (!errors.password && values.password.length < 6) {\n      errors.password = 'Too short. Must be atleast 6 characters'\n    }\n    if (!errors.confirmPassword && values.password !== values.confirmPassword) {\n      errors.confirmPassword = 'Password do not match.'\n    }\n    return errors;\n  }\n\n\n  function doSignup(values) {\n\n    axios\n      .post(`/api/register`, values)\n      .then(result => {\n        if (result.data.logged_in) {\n          setLoggedUser(result.data.username);\n          NotificationManager.success(result.data.message);\n        }\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  return (\n    <Home>\n      <Col md={4} className=\"jumbotron\">\n        <h1>Signup</h1>\n        <hr className=\"my-2\" />\n        <Formik\n          initialValues={{\n            username: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n          }}\n          validate={validate}\n          onSubmit={doSignup} >\n          {(formik) => (\n            <Form noValidate onSubmit={formik.handleSubmit}>\n              <Form.Group controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"username\"\n                  required \n                  value={formik.values.username}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  {...validityProps(formik.errors.username, formik.touched.username)} />\n                  <Form.Control.Feedback type=\"invalid\">{formik.errors.username}</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"username@example.com\"\n                  required \n                  value={formik.values.email}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  {...validityProps(formik.errors.email, formik.touched.email)} />\n                <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n                <Form.Control.Feedback type=\"invalid\">{formik.errors.email}</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  required \n                  value={formik.values.password}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  {...validityProps(formik.errors.password, formik.touched.password)} />\n                  <Form.Control.Feedback type=\"invalid\">{formik.errors.password}</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  placeholder=\"Password\"\n                  required \n                  value={formik.values.confirmPassword}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  {...validityProps(formik.errors.confirmPassword, formik.touched.confirmPassword)} />\n                  <Form.Control.Feedback type=\"invalid\">{formik.errors.confirmPassword}</Form.Control.Feedback>\n              </Form.Group>\n              <Button variant=\"success\" type=\"submit\">Submit</Button>\n            </Form>\n          )}\n        </Formik>\n        <p className=\"mt-4\">Already have an account?&nbsp;<Link to=\"/login\">Login</Link></p>\n      </Col>\n    </Home>\n  );\n}","import React, { useState, useContext } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { NotificationManager } from 'react-notifications';\nimport { Formik } from \"formik\";\n\nimport Home from './home';\nimport { StoreContext } from '../store';\nimport { validityProps } from './signup';\n\nexport default function Login() {\n\n  const { dispatchUserAction } = useContext(StoreContext);\n\n  function validate(values) {\n    const errors = {};\n    if (!values.userId) errors.userId = 'Please enter your user ID.';\n    if (!values.password) errors.password = 'Please enter your user password.';\n    return errors;\n  }\n\n  function doLogin(values) {\n\n    axios\n      .post(`/api/login`, values)\n      .then(response => {\n        if (response.data.logged_in) {\n          dispatchUserAction({\n            type: 'login',\n            payload: {\n              username: response.data.username,\n              accessToken: response.data.access_token,\n              refreshToken: response.data.refresh_token\n            }\n          }\n        );\n        NotificationManager.success(response.data.message);\n        } else {\n          if ('authentication_error' in response.data) {\n            NotificationManager.error(response.data.message);\n          }\n        }\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  return (\n    <Home>\n      <Col md={4} className=\"jumbotron\">\n        <h1>Login</h1>\n        <hr className=\"my-2\" />\n        <Formik\n          initialValues={{\n            userId: '',\n            password: ''\n          }}\n          validate={validate}\n          onSubmit={doLogin} >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit\n          }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n              <Form.Group controlId=\"userId\">\n                <Form.Label>User ID</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"userId\"\n                  placeholder=\"Username or Email\"\n                  required\n                  value={values.userId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  {...validityProps(errors.userId, touched.userId)} />\n                <Form.Control.Feedback type=\"invalid\">{errors.userId}</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  required\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  {...validityProps(errors.password, touched.password)} />\n                <Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\n              </Form.Group>\n              <Button variant=\"success\" type=\"submit\">Submit</Button>\n            </Form>\n          )}\n        </Formik>\n        <p className=\"mt-4\">Don't have an account?&nbsp;<Link to=\"/signup\">Signup</Link></p>\n      </Col>\n    </Home>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Container, Row, Col, Form, Button, InputGroup } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport Main from \"./main\";\n\nexport default function Appointment() {\n\n  const [firstName, setFirstName] = useState('');\n  const [middleName, setMiddleName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phoneNo, setPhoneNo] = useState('');\n  const [age, setAge] = useState(0);\n  const [gender, setGender] = useState('');\n  const [treatmentHistory, setTreatmentHistory] = useState('');\n  const [historyDetails, setHistoryDetails] = useState('');\n  const [scheduleDate, setScheduleDate] = useState('');\n  const [validated, setValidated] = useState(false);\n\n  function doScheduleAppointment(e) {\n\n    e.preventDefault();\n    const form = e.currentTarget;\n    setValidated(true);\n    if (form.checkValidity() === false) return;\n    axios\n      .post('/api/schedule-appointment', {\n        full_name: `${firstName} ${middleName} ${lastName}`,\n        phone_no: phoneNo,\n        age,\n        gender,\n        treatment_history: treatmentHistory,\n        history_details: historyDetails,\n        schedule_date: scheduleDate\n      })\n      .then(result => {\n        NotificationManager.success(result.data.message);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  return (\n    <Main>\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col md={6} className=\"jumbotron\">\n            <h1>Patient Details</h1>\n            <p>Please fill the form below indicaticating the appoitment type you need. We will get back to you soon.</p>\n            <hr className=\"my-2\" />\n            <Form noValidate validated={validated} onSubmit={doScheduleAppointment}>\n              <Form.Group controlId=\"fullName\">\n                <Form.Label>Your full name</Form.Label>\n                <InputGroup>\n                  <Form.Control type=\"text\" placeholder=\"Fisrt\" name=\"first_name\" value={firstName} onChange={e => setFirstName(e.target.value.trim())} required />\n                  <Form.Control type=\"text\" placeholder=\"Middle\" name=\"middle_name\" value={middleName} onChange={e => setMiddleName(e.target.value.trim())} />\n                  <Form.Control type=\"text\" placeholder=\"Last\" name=\"last_name\" value={lastName} onChange={e => setLastName(e.target.value.trim())} />\n                </InputGroup>\n                <Form.Control.Feedback type=\"invalid\">\n                  Please tell us your full name.\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"phoneNo\">\n                <Form.Label>Phone Number</Form.Label>\n                <InputGroup>\n                  <Form.Control as=\"select\">\n                    <option>+254</option>\n                  </Form.Control>\n                  <Form.Control type=\"telephone\" maxLength=\"9\" placeholder=\"7********\" name=\"phone_no\" value={phoneNo} onChange={e => setPhoneNo(e.target.value)} required />\n                </InputGroup>\n                <Form.Control.Feedback type=\"invalid\">\n                  Please give us your phone number so we can contact you.\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"genderSelector\">\n                <Form.Label>Choose your gender</Form.Label>\n                <Form.Check label=\"Male\" type=\"radio\" name=\"gender\" value=\"M\" id=\"gendeMale\" required />\n                <Form.Check label=\"Female\" type=\"radio\" name=\"gender\" value=\"F\" id=\"genderFemale\" />\n                <Form.Check label=\"Other\" type=\"radio\" name=\"gender\" value=\"X\" id=\"genderOther\" />\n              </Form.Group>\n              <Form.Group controlId=\"phoneNo\">\n                <Form.Label>How old are you?</Form.Label>\n                <Form.Control type=\"number\" min=\"0\" placeholder=\"Your age\" name=\"age\" value={age} onChange={e => setAge(e.target.value)} required />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please tell us how old you are.\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"treatmentHistory\">\n                <Form.Label>Have you previously attended our facility?</Form.Label>\n                <Form.Check type=\"radio\" label=\"Yes\" name=\"treatment_history\" value=\"Y\" id=\"treatmentHistoryYes\" required />\n                <Form.Check type=\"radio\" label=\"No\" name=\"treatment_history\" value=\"N\" id=\"treatmentHistoryNo\" />\n              </Form.Group>\n              <Form.Group controlId=\"historyDetails\">\n                <Form.Label>If Yes, state on which condition and when?</Form.Label>\n                <Form.Control as=\"textarea\" rows=\"3\" name=\"history_details\" value={historyDetails} onChange={e => setHistoryDetails(e.target.value)} />\n              </Form.Group>\n              <Form.Group controlId=\"appointmentType\">\n                <Form.Label>What kind of appointment do you need?</Form.Label>\n                <Form.Check type=\"radio\" label=\"One kind\" name=\"appointment_type\" value=\"t1\" id=\"appointment1\" required />\n                <Form.Check type=\"radio\" label=\"Another kind\" name=\"appointment_type\" value=\"t2\" id=\"appointment2\" />\n                <Form.Check type=\"radio\" label=\"The other kind\" name=\"appointment_type\" value=\"t3\" id=\"appointment3\" />\n                <Form.Check type=\"radio\" label=\"General\" name=\"appointment_type\" value=\"t4\" id=\"generalAppointment\" />\n              </Form.Group>\n              <Form.Group controlId=\"scheduleDate\">\n                <Form.Label>When would you like to come in?</Form.Label>\n                <Form.Control type=\"date\" name=\"schedule_date\" value={scheduleDate} onChange={e => setScheduleDate(e.target.value)} required />\n              </Form.Group>\n              <Button variant=\"success\" type=\"submit\">Submit</Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Main>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from './main';\n\n\nexport default function Http401() {\n  return (\n    <Main>\n      <div className=\"jumbotron\">\n        <div className=\"text-center\">\n          <h1>401 - Unauthorised</h1>\n          <p>You are not authorized to view this page. Please <Link to=\"/login\">log in</Link>.</p>\n        </div>\n      </div>\n    </Main>\n  );\n}\n","import React from 'react';\n\nimport Main from './main';\n\n\nexport default function Http403() {\n  return (\n    <Main>\n      <div className=\"jumbotron\">\n        <div className=\"text-center\">\n            <h1>403 - Forbidden</h1>\n            <p>You are forbidden from viewing this page.</p>\n        </div>\n      </div>\n    </Main>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from './main';\n\n\nexport default function Http404() {\n  return (\n    <Main>\n      <div className=\"jumbotron\">\n        <div className=\"text-center\">\n          <h1>404 - Not Found!</h1>\n          <p>Sorry, the requested page doesn't exist. Go <Link to=\"/\">back home</Link>.</p>\n        </div>\n      </div>\n    </Main>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from './main';\n\n\nexport default function Http500() {\n  return (\n    <Main>\n      <div className=\"jumbotron\">\n        <div className=\"text-center\">\n          <h1>500 - Internal Server Error</h1>\n          <p>Sorry, something went terribly wrong. Let's take you <Link to=\"/\">back home</Link>.</p>\n        </div>\n      </div>\n    </Main>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport axios from 'axios';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nconst history = createBrowserHistory()\n\naxios.interceptors.response.use(undefined, \n  async function (error) {\n    const {status} = error.response;\n    if (status === 401) {\n      if (error.response.data.token_status === 'expired') {\n        let user = JSON.parse(sessionStorage.getItem('user'));\n        try {\n          const refreshResponse = await axios.get(error.response.data.refresh_url, {headers: {'Authorization': `Bearer ${user.refreshToken}`}});\n          user.accessToken = refreshResponse.data.refresh_token;\n          sessionStorage.setItem('user', JSON.stringify(user));\n          const {url, method} = error.response.config\n          const retryResponse = await axios({url, method, headers: {'Authorization': `Bearer ${user.accessToken}`}});\n          return Promise.resolve(retryResponse);\n        } catch (error) {\n          // console.log(error);\n        }\n      }\n      history.push('/http401');\n    }\n    else if (status === 403) history.push('/http403');\n    else if (status === 500) history.push('/http500');\n    return Promise.reject(error);\n});\n\nReactDOM.render(<Router history={history}><App/></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { NotificationContainer } from 'react-notifications';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-notifications/lib/notifications.css';\n\nimport Home from './components/home';\nimport Login from './components/login';\nimport Signup from './components/signup';\nimport Appointment from './components/appointment';\nimport Store from './store';\nimport Http401 from './components/http401';\nimport Http403 from './components/http403';\nimport Http404 from './components/http404';\nimport Http500 from './components/http500';\nimport './App.css';\n\n\nexport default function App() {\n  return (\n    <Store>\n      <NotificationContainer />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/schedule-appointment\" component={Appointment} />\n        <Route path=\"/http401\" component={Http401} />\n        <Route path=\"/http403\" component={Http403} />\n        <Route path=\"/http500\" component={Http500} />\n        <Route component={Http404} />{/* Catch any other path */}\n      </Switch>\n    </Store>\n  );\n}\n"],"sourceRoot":""}